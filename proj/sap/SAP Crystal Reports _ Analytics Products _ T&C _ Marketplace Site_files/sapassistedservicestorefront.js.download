var sessionSec;
var counter;
var carts;

function addASMHandlers() {

    revertAutocompleteNormalize();
    addCloseBtnHandler();
    addASMFormHandler();
    addHideBtnHandler();
    addOrderTypeHandler();
    addVbOrderIdHandler();
    addTagEditor();
    bindMaterialSearch();
    addContractNumberInputHandler();
    addContractDateInputHandler();

    if ($("#sessionTimer").length && $('#asmLogoutForm').length) {
        startTimer();
    }

    if ($(".ASM_timer #resetButton").length) {
        $("#resetButton").click(function () {
            resetSession();
        });
    }

    /* for <=IE9 */
    if (placeholderNotAvailable()) {
        $('[placeholder]').focus(function () {
            var input = $(this);
            if (input.val() === input.attr('placeholder')) {
                input.val('');
                input.removeClass('placeholder');
            }
        }).blur(function () {
            var input = $(this);
            if (input.val() === '' || input.val() === input.attr('placeholder')) {
                input.addClass('placeholder');
                input.val(input.attr('placeholder'));
            }
        }).blur();
    }

    $('[placeholder]').blur(function () {
        var input = $(this);
        if (input.val() === '' && input.attr("name")) {
            toggleBind(false);
        }
    });

    if ($('.ASM_alert_cart').length) {
        $("input[name='cartId']").addClass('ASM-input-error');
    }

    if ($('.ASM_alert_customer').length) {
        $("input[name='customerName']").addClass('ASM-input-error');
    }

    if ($('.ASM_alert_cred').length) {
        $("input[name='username']").addClass('ASM-input-error');
        $("input[name='password']").addClass('ASM-input-error');
    }

    if ($('.ASM_alert_create_new').length) {
        toggleCreateAccount(true);
    }

    /* form validation */
    if ($('#_asmLogin').length) {
        var loginUser = $("#asmLoginForm input[name='username']");
        var min = 1;
        if (loginUser.val().length >= min) {
            loginUser.parent().addClass('checked');
        }

        $("input.ASM-input[name='password']").on('change', function () {
            loginButtonEnabler();
        });

        loginButtonEnabler();
    }

    $("#asmLoginForm input[name='username'], #asmLoginForm input[name='password']").keyup(function () {
        var min = 1;
        var parentNode = $(this.parentNode);

        if (this.value.length >= (min)) {
            parentNode.addClass('checked');
            checkSignInButton(parentNode);
        }
        else {
            parentNode.removeClass('checked');
            checkSignInButton(parentNode);
        }
    });

    /* start session validation */
    $(".ASM_input_holder input[name='customerName']").keyup(function () {
        validateNewAccount(this);
        $(this).removeData("hover");
        removeAsmHover();
        toggleBind(false);
        toggleStartSessionButton(this, false);

        if ($(this).val().length < 3) {
            toggleCreateAccount(false);
        }
    });

    $("#_asmPersonifyForm input[name='cartId']").keyup(function () {
        formValidate(this, 8, true, 9);
        if (isErrorDisplayed()) {
            $("input[name='cartId']").removeClass('ASM-input-error');
            if ($('.ASM_alert')) {
                $('.ASM_alert').remove();
            }
        }
    });

    $("#_asmPersonifyForm input[name='customerName']").keyup(function () {
        if (isErrorDisplayed()) {
            $("input[name='customerName']").removeClass('ASM-input-error');
            if ($('.ASM_alert')) {
                $('.ASM_alert').remove();
            }
            if ($(this).val() === "") {
                $("input[name='cartId']").removeClass('ASM-input-error');
                toggleStartSessionButton($("input[name='cartId']"), true);
                $("input[name='customerId']").val("");
            }
        }
        if ($(this).val() === "") {
            $("input[name='cartId']").val("");
            $("#asmAutoCompleteCartId").empty();
        }
    });

    /* Reset addToCartButton and goToPdpButton */
    $('#asmMaterialSearch').keyup(function () {
        $("#asmAddToCart").prop("disabled", true);
        $("#productCodePost").val("");
        var toggle = $("input:radio[name='orderType']:checked");
        if (toggle.attr('id') === 'asmUpsellOrder' && toggle.val() === 'UPSELL') {
            toggleVbOrderIdSection(true);
        }
        $(".js-asm-go-to-pdp").addClass("hide");
    });

    $("#_asmPersonifyForm input[name='cartId']").blur(function () {
        var regEx = /^\s+$/;
        if (regEx.test($(this).val())) {
            $(this).val('');
            formValidate(this, 8, true, 9);
        }
    });

    $("#_asmBindForm input[name='cartId']").keyup(function () {
        checkCartIdFieldAndToggleBind(this);
    });

    $("#_asmBindForm input[name='cartId']").bind('paste', function () {
        var inputField = this;
        setTimeout(function () {
            checkCartIdFieldAndToggleBind(inputField);
        }, 100);
    });
    /* end form validation */

    $(".ASM_input_holder input[name='customerName'], .ASM_input_holder input[name='customerId']").hover(function () {
            if ($(this).val().length > 2) {
                var item = ($(this).attr('data-hover')) ? jQuery.parseJSON($(this).attr('data-hover')) : $(this).data("hover");
                var disabled = ($(this).attr('data-hover')) ? "disabled" : "";
                if (item != null) {
                    var accountName = "";
                    if (typeof item.account !== "undefined" && item.account) {
                        accountName = item.account;
                    }
                }

                if (!(item === null || item === undefined)) {
                    $(this).after('<div id="asmHover" class="' + disabled + '"><span class="name">' + item.name + '</span>' +
                        '<span class="email">' + item.email + '</span>' +
                        '<span class="account">' + accountName + '</span>' +
                        '<span class="date">' + item.date + '</span>');
                }
            }
        }, function () {
            removeAsmHover();
        }
    );


    $("#_asmPersonifyForm input[name='cartId']").autocomplete({
        source: function (request, response) {
            response(carts);
        },
        appendTo: "#asmAutoCompleteCartId",
        autoFocus: true,
        minLength: 0,
        select: function (event, ui) {
            if (ui.item.value === "") {
                event.preventDefault();
            }
            toggleStartSessionButton(this, true);
        }
    });

    $("#_asmPersonifyForm input[name='cartId']").on('click, focus', function () {
        $("#_asmPersonifyForm input[name='cartId']").autocomplete('search', '');
    });

    if ($(".ASM_input_holder input[name='customerName']").length > 0) {
        $("input[name='customerName']").autocomplete({
            source: function (request, response) {
                if (this.timeoutId) {
                    window.clearTimeout(this.timeoutId);
                }
                this.timeoutId = window.setTimeout(function () {
                    $.ajax({
                        url: ACC.common.contextPath + "/assisted-service/autocomplete",
                        dataType: "jsonp",
                        data: {
                            customerId: request.term
                        },
                        success: function (data) {
                            response(data);
                        }
                    });
                }, 1500);
            },
            minLength: 3,
            appendTo: "#asmAutoComplete",
            select: function (event, ui) {
                if (ui.item.value === "") {
                    event.preventDefault();
                    return;
                }
                toggleStartSessionButton(this, true);
                if (typeof ui.item.account !== "undefined" && ui.item.account) {
                    $(this).data('hover', {
                        name: ui.item.value,
                        email: ui.item.email,
                        date: ui.item.date,
                        account: ui.item.account[0].name
                    });
                } else {
                    $(this).data('hover', {name: ui.item.value, email: ui.item.email, date: ui.item.date});
                }


                /* insert item.value in customerId hidden field */
                $("input[name='customerId']").val(ui.item.email);

                /* insert account.id in customerAccount hidden field */
                if (typeof ui.item.account !== "undefined" && ui.item.account) {
                    $("input[name='customerAccount']").val(ui.item.account[0].id);
                }

                carts = ui.item.carts;
                if ($("input[name='cartId']").attr("orig_value") == null) {
                    $("input[name='cartId']").val('');
                    if (carts != null) {
                        if (carts.length === 1) {
                            $("input[name='cartId']").val(carts[0]);
                        } else {
                            $("input[name='cartId']").autocomplete('search', '');
                            $("input[name='cartId']").focus();
                        }
                    } else {
                        carts = [{label: "No Existing Carts", value: ""}];
                        $("input[name='cartId']").autocomplete('search', '');
                        $("input[name='cartId']").focus();
                    }
                }

                toggleBind(true);

            }
        }).data("ui-autocomplete")._renderItem = function (ul, item) {
            if (item.value === "") {
                toggleCreateAccount(true);
                return $("<li></li>").data("item.autocomplete", item).append("<a><span class='noresult'>No Customer ID found</span></a>")
                    .appendTo(ul);
            }
            else {
                toggleCreateAccount(false);
            }

            var accountName = "";
            if (typeof item.account !== "undefined" && item.account) {
                accountName = item.account[0].name;
            }
            return $("<li></li>")
                .data("item.autocomplete", item)
                .append("<a><span class='name'>" + item.value + "</span>" +
                    "<span class='email'>" + item.email + "</span>" +
                    "<span class='account'>" + accountName + "</span>" +
                    "<span class='date'>" + item.date + "</span></a>")
                .appendTo(ul);
        };
    }

    if ($("#_asmBindForm").length) {
        var customerId = $("input[name='customerName']").attr('readonly');
        if (customerId === "readonly") {
            $(".ASM_icon-chain").removeClass('invisible').addClass('ASM_chain-bind');
            $("#_asm input[name='cartId']").prop('disabled', true);
            $("#_asm input[name='opportunityId']").prop('disabled', true);
        }
    }

    if ($(".add_to_cart_form").length && $("#_asm input[name='cartId']").val() === "") {
        $(".add_to_cart_form").submit(function () {
            setTimeout(function () {
                var url = ACC.common.encodedContextPath + "/assisted-service/add-to-cart";
                $.post(url, function (data) {
                    $("#_asm").replaceWith(data);
                    addASMHandlers();
                });
            }, 400);
        });
    }

    $("#ASMAgentSendEmail textarea[name='custom-text']").on('input', function () {
        var injectedText = $(this).val();
        $('.asmEmailinjectedText').html(injectedText);
    });

    $('#languageDropdown').on('change', function () {
        var isocode = $(this).find(':selected').val();
        $.ajax({
            url: ACC.common.contextPath + "/assisted-service/update-template",
            type: 'GET',
            data: {
                languageiso: isocode
            },
            success: function (data) {
                updateMailTemplate(data);
                $('#asmEmailDummy').attr('data-iso-code', isocode);
            },
            error: function () {
                // TODO implement error handling after design is finalized and it is clear wether one should implement a loading spinner
            }
        });
    });

    $("#ASMAgentSendEmail a.asm-send-email").click(function () {
        jQuery.ajax({
            url: '/assisted-service/send-email',
            data: $('#asmAgentSendEmailFormId').serialize(),
            type: 'POST',
            success: function () {
                $('#ASMAgentSendEmailSuccess').foundation('reveal', 'open');
            },
            error: function () {
                $('#ASMAgentSendEmailError').foundation('reveal', 'open');
            }
        });
    });

    enableAsmPanelButtons();
}

$(document).ready(function () {
    addASMHandlers();

    addCustomer360Handler();
    addGenericCustomer360Handler();
});

function loginButtonEnabler() {
    if ($("input.ASM-input[name='password']").val().length > 0) {
        $('button.ASM-btn-login').removeAttr('disabled');
    }
}

function addASMFormHandler() {
    if ($ && $(".asmForm").length) {
        $(".asmForm").each(function () {
            $(this).submit(function () {

                $(this).find('[placeholder]').each(function () {
                    var input = $(this);
                    if (input.val() === input.attr('placeholder')) {
                        input.val('');
                    }
                });

                $.ajax({
                    type: "POST",
                    url: $(this).attr('action'),
                    data: $(this).serialize(),
                    success: function (data) {
                        $("#_asm").replaceWith(data);
                        addASMHandlers();
                    }
                });
                return false;
            });
        });
    }

}

function addCloseBtnHandler() {
    $("#_asm .closeBtn").click(function () {
        var url = ACC.common.encodedContextPath + "/assisted-service/quit";
        $.post(url, function () {
            var oldurl = window.location.href;
            var newurl = oldurl.replace("&asm=true", "").replace("?asm=true&", "?").replace("?asm=true", "");
            window.location.replace(newurl);
        });
    });
}

function addHideBtnHandler() {
    $("#_asm .ASM_control_collapse").click(function () {
        $("#_asm").toggleClass("ASM-collapsed");
    });
}

function startTimer() {
    sessionSec = timer;
    clearInterval(counter);
    counter = setInterval(timerFunc, 1000);
}

function timerFunc() {
    if (sessionSec <= 0) {
        clearInterval(counter);
        finishASMagentSession();
        return;
    }
    sessionSec = sessionSec - 1;
    var min = Math.floor(sessionSec / 60);
    var sec = sessionSec % 60;
    if (min < 10) {
        min = "0" + min;
    }
    if (sec < 10) {
        sec = "0" + sec;
    }
    $("#sessionTimer .ASM_timer_count").html(min + ":" + sec);
}

function resetSession() {
    var request = $.ajax({
        url: ACC.common.contextPath + "/assisted-service/resetSession",
        data: {
            CSRFToken: $('[name=CSRFToken]').val()
        },
        beforeSend: function (xhr) {
            xhr.overrideMimeType("text/plain");
        },
        type: "POST"
    });
    request.done(function () {
        sessionSec = timer + 1;
    });
    request.fail(function (jqXHR, textStatus) {
        $('#errors').empty();
        $('#errors').append("Request failed: " + textStatus);
    });
}

function finishASMagentSession() {
    $.ajax({
        url: ACC.common.encodedContextPath + "/assisted-service/logoutasm",
        data: {
            CSRFToken: $('[name=CSRFToken]').val()
        },
        type: "POST",
        success: function (data) {
            $("#_asm").replaceWith(data);
            addASMHandlers();
        }
    });
}

function isStartEmulateButtonPresent() {
    return $(".ASM-btn-start-session").length === 1;
}

function enableAsmPanelButtons() {
    $('div[id="_asm"] button').not(".ASM-btn-start-session, .ASM-btn-create-account, .ASM-btn-login, .ASM-popup-start-session-quote, #asmAddToCart").removeAttr('disabled');
    if (isStartEmulateButtonPresent()) {
        if ($("#_asmPersonifyForm input[name='customerId']").val() !== "") {
            $("#_asmPersonifyForm input[name='customerId']").parent().addClass("checked");
        }
        formValidate($("#_asmPersonifyForm input[name='cartId']")[0], 8, true, 9);
    }
}

function placeholderNotAvailable() {
    var i = document.createElement('input');
    return !('placeholder' in i);
}

function removeAsmHover() {
    $('#asmHover').remove();
}

function toggleCreateAccount(activate) {
    var bindIcon = $(".ASM_icon-chain");
    var createButton = $("#_asmCreateAccountForm button.ASM-btn-create-account[type='submit']");
    if (activate) {
        createButton.removeClass('hidden');
        bindIcon.removeClass('invisible');
    } else {
        createButton.addClass('hidden');
        bindIcon.addClass('invisible');
    }
}

function toggleActivationState(button, activate) {
    if (activate) {
        button.removeAttr('disabled');
    }
    else {
        button.attr('disabled', '');
    }
}

function checkSignInButton(el) {
    var signInBtn = $("#asmLoginForm button[type='submit']");
    var checkSum = $(el).parent().find('.checked').length;
    if (checkSum > 1) {
        toggleActivationState(signInBtn, true);
    }
    else {
        toggleActivationState(signInBtn, false);
    }
}

function checkStartSessionButton(el) {
    toggleStartSessionButton(el, false);
    var checkSum = $(el.parentNode).siblings('.checked').length;
    if (checkSum > 0) {
        toggleActivationState($("button.ASM-btn-start-session"), true);
    }
}

function checkCartIdFieldAndToggleBind(cartIdField) {
    if (!$(cartIdField).hasClass('placeholder') && $("input[name='customerId']").val().length > 0) {
        if (!isNaN(cartIdField.value) && (cartIdField.value.length === 8) && (cartIdField.value !== cartIdField.getAttribute('orig_value'))) {
            $("#_asmBindForm button[type='submit']").removeClass('hidden');
            $(".ASM_icon-chain").removeClass('invisible');
            return;
        }
    }
    $("#_asmBindForm button[type='submit']").addClass('hidden');
    $(".ASM_icon-chain").addClass('invisible');
}

function toggleBind(activate) {
    if ($("#_asmBindForm").length) {
        var bindIcon = $(".ASM_icon-chain");
        var bindButton = $("#_asmBindForm button.ASM-btn-bind-cart[type='submit']");
        if (activate) {
            bindButton.removeClass('hidden');
            bindIcon.removeClass('invisible');
        } else {
            bindButton.addClass('hidden');
            if ($('.ASM-btn-create-account').hasClass('hidden')) {
                bindIcon.addClass('invisible');
            }
        }
    }
}

function toggleStartSessionButton(el, activate) {
    var checkedItem = $(el).parent();
    var button = $("button.ASM-btn-start-session");
    if (activate) {
        button.removeAttr('disabled');
        checkedItem.addClass("checked");
    } else {
        button.attr('disabled', '');
        checkedItem.removeClass("checked");
    }
}

function formValidate(el, min, number, max) {
    if (!$(el).hasClass('placeholder')) {
        if ($(el).hasClass("ASM-input-error")) {
            toggleStartSessionButton(el, false);
            return false;
        }
        if (number !== false && isNaN(el.value)) {
            toggleStartSessionButton(el, false);
            return false;
        }
        if (el.value.length >= (min)) {
            toggleStartSessionButton(el, true);

            if (max !== undefined && el.value.length > (max)) {
                toggleStartSessionButton(el, false);
            }
        }
        else if (el.value.length === 0) {
            checkStartSessionButton(el);
        }
        else {
            toggleStartSessionButton(el, false);
            return false;
        }
        return true;
    }
    return false;
}

function validateEmail(mailAddress) {
    return ($('<input>').attr({
        type: 'email',
        required: 'required'
    }).val(mailAddress))[0].checkValidity() && (mailAddress.indexOf(".") > 0);
}

function validateName(name) {
    var regEx = /^[a-zA-Z-]+\s[a-zA-Z-]+$/;
    return (name !== '' && regEx.test(name));
}

function validateNewAccount(el) {
    var createAccountButton = $("#_asmCreateAccountForm button.ASM-btn-create-account[type='submit']");
    var customerValues = el.value.split(', ');
    var IdInput = $("#_asmCreateAccountForm input[name='customerId']");
    var NameInput = $("#_asmCreateAccountForm input[name='customerName']");

    if (customerValues.length > 1) {
        var validName = validateName(customerValues[0]);
        var validMail = validateEmail(customerValues[1]);
        if (validName && validMail) {
            toggleActivationState(createAccountButton, true);
            /* fill hidden input fields */
            IdInput.val(customerValues[1].replace(/^\s\s*/, '').replace(/\s\s*$/, ''));
            NameInput.val(customerValues[0]);
        }
        else {
            /* no valid customer values */
            toggleActivationState(createAccountButton, false);
            return false;
        }
    }
    else {
        /* too less customer values */
        toggleActivationState(createAccountButton, false);
        return false;
    }
}

function revertAutocompleteNormalize() {
    /* After http://bugs.jqueryui.com/ticket/9762 there was a change when for empty value label is placed instead.
     * But we want to send empty values for NO_FOUND case */
    $.ui.autocomplete.prototype._normalize = function (a) {
        if (a.length && a[0].label && a[0].value) {
            return a;
        }
        return $.map(a, function (b) {
            if (typeof b === "string") {
                return {label: b, value: b};
            }
            return $.extend({label: b.label || b.value, value: b.value || b.label}, b);
        });
    };
}

function isErrorDisplayed() {
    return $('.ASM_alert').length;
}

function bindMaterialSearch() {

    var matchMaterialNumberPattern = "(\\d*)";

    if ($("#asmMaterialSearch").length > 0) {
        $("#asmMaterialSearch").autocomplete({
            source: function (request, response) {
                if (this.timeoutId) {
                    window.clearTimeout(this.timeoutId);
                }
                var materialNumber = request.term.match(matchMaterialNumberPattern);

                if (materialNumber[0] === "") {
                    materialNumber[0] = request.term
                }

                var orderTypeRadioButton = $("#asm-material-id-search").find(':checked').val();

                this.timeoutId = window.setTimeout(function () {
                    $.ajax({
                        url: ACC.common.contextPath + "/assisted-service/autocompleteMaterial",
                        dataType: "jsonp",
                        data: {
                            searchFieldMaterialId: materialNumber[0],
                            orderType: orderTypeRadioButton
                        },
                        success: function (data) {
                            response(data);
                        }
                    });
                });
            },
            minLength: 4,
            appendTo: "#asmMaterialSearchResults",
            select: function (event, ui) {

                if (!ui.item.value == "" || ui.item.materialId) {
                    setTimeout(function () {
                        $("input[name='asmMaterialSearch']").val(ui.item.materialId + " - " + ui.item.name);
                    }, 0);
                    var toggle = $("input:radio[name='orderType']:checked");
                    var contractDate = $("#contractDateId").val();
                    var contractNumber = $("#contractNumberId").val();
                    $("input[name='productCodePost']").val(ui.item.code);
                    if (toggle.val() === 'INITIAL' || ($("#vbOrderId").val() && $("#vbOrderId").val() !== "")) {
                        $("#contractNumberId").attr('disabled','disabled');
                        $("#contractDateId").attr('disabled','disabled');
                        $("#asmAddToCart").removeAttr('disabled');
                    }
                    if((contractDate !== "" && contractNumber !== "")){
                        $("#asmAddToCart").removeAttr('disabled');
                    }
                    if (toggle.attr('id') === 'asmUpsellOrder' && toggle.val() === 'UPSELL') {
                        addVbOrderIdSelect($("#productCodePost").val());
                    }

                    if (ui.item.hidePdp == 'true') {
                        $("#asmGoToPDP").addClass("hide");
                    }
                    else {
                        $(".js-asm-go-to-pdp").removeClass("hide");
                        $("#asmGoToPDP").attr("href", '/assisted-service/open-pdp?code=' + $("#productCodePost").val());
                    }
                }

            }
        }).data("ui-autocomplete")._renderItem = function (ul, item) {
            if (item.label === "No results found") {
                toggleCreateAccount(true);
                return $("<li></li>").data("item.autocomplete", item).append("<span class='noresult'>Material ID is not found</span>")
                    .appendTo(ul);
            }
            if (item.label === "Results filtered") {
                var orderType = $("#asm-material-id-search").find(':checked').val();
                toggleCreateAccount(true);
                return $("<li></li>").data("item.autocomplete", item).append("<span class='noresult'>Product is not available for " + orderType + " purchase</span>")
                    .appendTo(ul);
            }
            return $("<li></li>").data("item.autocomplete", item)
                .append("<a><span class='materialID productID' data-product-id='" + item.code + "'>" + item.materialId + "</span> - <span class='materialName'>" + item.name + "</span></a>")
                .appendTo(ul);
        };
    }
    ;
}


function addTagEditor() {
    $('#ccEmail').tagEditor({
        animateDelete: 275,
        removeDuplicates: true,
        delimiter: ',',
        onChange: function (field, editor, tags) {

            var elements = $('li', editor);

            elements.each(function () {
                var element = $(this).find('.tag-editor-tag');
                if (isValidEmail(element.text()) || element.text() === "") {
                    $(this).removeClass('not-valid');
                } else {
                    $(this).addClass('not-valid');
                }
            });
            setSubmitStatus(tags);
        }
    });

    $(document).foundation();
}

function isValidEmail(emailAddress) {
    return emailAddress.match(Foundation.libs.abide.settings.patterns.email);
}

function setSubmitStatus(tags) {
    $('.asm-send-email').prop('disabled', !allEmailsAreValid(tags));
}

function allEmailsAreValid(tags) {
    var isInvalid = true;
    for (var index in tags) {
        if (!(isValidEmail(tags[index]) || tags[index] === "")) {
            isInvalid = false;
        }
    }
    return isInvalid;
}

/**
 * Takes translated String and fills them into the corresponding <Span>'s in the E-Mail preview for ASM
 * <Span> Name has to be similar to the property in the response
 * @param templateData JSON with translated texts
 */
function updateMailTemplate(templateData) {
    var mailTemplateSelector = "#asmEmailDummy";
    for (var labelString in templateData) {
        if (templateData.hasOwnProperty(labelString)) {
            $(mailTemplateSelector).find("[name*=" + labelString + "]").html(templateData[labelString]);
        }
    }
}

function addCustomer360Handler() {
    openCustomer360Colorbox($(".js-customer360"));
}

function addGenericCustomer360Handler() {
    if ($("#enable360View").val()) {
        openCustomer360Colorbox($);
    }
}

function customer360Callback() {
    var loader = "<div class='loader'>Loading..</div>";
    $("#cboxLoadedContent").html(loader).show();
    $.ajax({
        url: ACC.common.encodedContextPath + "/assisted-service-aif/customer360",
        type: "GET",
        success: function (data) {
            $("#cboxLoadedContent").append(data);
            $.colorbox.resize();
        },
        error: function (xht, textStatus, ex) {
            console.error("Failed to load Customer 360. %s", ex);
            document.location.reload();
        }
    });
}

function loadCustomer360Fragment(params) {
    return $.ajax({
        url: ACC.common.encodedContextPath + "/assisted-service-aif/customer360Fragment",
        timeout: params.timeout,
        type: params.method,
        data: params,
        success: function (data) {
            $("#" + params.fragmentId).html(data);
            ACC.assistedservicepromotion.init();
            $.colorbox.resize();

        },
        error: function (xht, textStatus, ex) {
            if (textStatus === 'timeout') {
                $("#" + params.fragmentId).html("Widget timeout!");
                //do something. Try again perhaps?
            }
            else {
                console.error("Failed to get widget data! %s", ex);
                $("#" + params.fragmentId).html("Failed to get widget data!");
            }
        }
    });
}

function openCustomer360Colorbox(colorboxTarget) {
    colorboxTarget.colorbox({
        inline: 'true',
        className: 'ASM_customer360-modal',
        width: "100%",
        maxWidth: "1200px",
        minHeight: "350px",
        close: '<span class=\"ASM_close closeBtn\" aria-hidden=\"true\" data-dismiss=\"alert\">×</span>',
        transition: 'none',
        scrolling: true,
        opacity: 0.7,
        top: 10,
        onOpen: function () {
            customer360Callback();
            $(window).on("resize", colorboxResize);
        },
        onClosed: function () {
            $(window).off("resize", colorboxResize);
        }
    });
}

function colorboxResize() {
    $.colorbox.resize()
}

function asmAifSectionClickHandler() {
    $(document).on("click", ".asm__customer360__menu li", function (e) {
        e.preventDefault();
        if (!$(this).hasClass('nav-tabs-mobile-caret')) {
            aifSelectSection($(this).index());
        }
    });
}

function getCurrentEmulatedCustomerId() {
    if ($("#_asmBindForm input[name='customerId']").length) {
        return $("#_asmBindForm input[name='customerId']").val();
    }
    return "anonymous";
}

function aifSelectLastSection() {
    var index = 0;
    if (sessionStorage.getItem("lastSection")) {
        var lastSection = JSON.parse(sessionStorage.getItem("lastSection"));
        if (getCurrentEmulatedCustomerId() == lastSection.userId) {
            index = lastSection.sectionId;
        }
    }
    $($(".asm__customer360__menu li[role='presentation']")[index]).addClass("active");
    aifSelectSection(index);
}

function aifSelectSection(index) {
    $("#sectionPlaceholder").hide();
    $("#longLoadExample").show();
    var sectionId = $(".asm__customer360__menu li").get(index).getAttribute("value");
    sessionStorage.setItem("lastSection", JSON.stringify({userId: getCurrentEmulatedCustomerId(), sectionId: index}));
    $.ajax({
        url: ACC.common.encodedContextPath + "/assisted-service-aif/customer360section?sectionId=" + sectionId,
        type: "GET",
        success: function (data) {
            $("#sectionPlaceholder").html(data);
            $("#longLoadExample").hide();
            $("#sectionPlaceholder").show();
            $.colorbox.resize();
        }
    });
    resetSession();
}

// dropdown
$(function () {
    $(document).on("click", ".js-customer-360-tab", function (e) {
        e.preventDefault();
        $(this).parent().addClass("active").siblings().removeClass("active");
    });
    $( "#contractDateId" ).datepicker({
        dateFormat: 'dd-M-yy',
        beforeShow: function() {
            setTimeout(function(){
                $('.ui-datepicker').css('z-index', 100);
            }, 0);
        }
    });
});

function toggleVbOrderIdSection(activate) {
    var vbOrderIdSection = $("#vbOrderIdSection");
    var vbOrderId = $("#vbOrderId");
    vbOrderId.val('');
    vbOrderId.find("option").slice(1).remove();
    if (activate) {
        vbOrderIdSection.removeClass("hide");
    } else {
        vbOrderIdSection.addClass("hide");
    }
}

function addOrderTypeHandler() {
    $("input:radio[name='orderType']").change(
        function () {
            if (this.checked) {
                var addToCartButton = $("#asmAddToCart");
                var productCode = $("#productCodePost").val();
                switch (this.value) {
                    case "INITIAL":
                        toggleVbOrderIdSection(false);
                        showContractFields(false);
                        if (productCode !== "") {
                            toggleActivationState(addToCartButton, true);
                        }
                        break;
                    case "UPSELL":
                        if (this.id === "asmUpsellOrder") {
                            processUsualUpsell(productCode, addToCartButton);
                        } else if (this.id === "asmUpsellOnPremiseOrder") {
                            processOnPremiseUpsell(productCode, addToCartButton);
                        }
                        break;
                    case "CROSS_SELL":
                        toggleActivationState(addToCartButton, false);
                        toggleVbOrderIdSection(true);
                        showContractFields(false);
                        addVbOrderIdSelect();
                        break;
                }
            }
        });
}

function processUsualUpsell(productCode, addToCartButton) {
    toggleVbOrderIdSection(true);
    showContractFields(false);
    if (productCode !== "") {
        addVbOrderIdSelect(productCode);
    } else {
        toggleActivationState(addToCartButton, false);
    }
}

function processOnPremiseUpsell(productCode, addToCartButton) {
    toggleVbOrderIdSection(false);
    showContractFields(true);

    var contractDate = $("#contractDateId").val();
    var isAllowedToActivateAddToCartButton = productCode !== "" && contractDate !== "" && isValidContractNumberLength();
    activateAddToCartButton(isAllowedToActivateAddToCartButton);
}

function showContractFields(enabled) {
    if (enabled) {
        $("#contractNumberSection").removeClass("hide");
        $("#contractNumberId").removeAttr('disabled');
        $("#contractDateSection").removeClass("hide");
        $("#contractDateId").removeAttr('disabled');
    } else {
        $("#contractNumberSection").addClass("hide");
        $("#contractNumberId").attr('disabled','disabled');
        $("#contractDateSection").addClass("hide");
        $("#contractDateId").attr('disabled','disabled');
    }
}

function addVbOrderIdHandler() {
    $("#vbOrderId").change(function () {
        if ($(this).val() !== "" && $("#productCodePost").val() !== "") {
            $("#asmAddToCart").removeAttr('disabled');
        }
    });
}

function addContractNumberInputHandler() {
    $("#contractNumberId").on("keyup", function () {
        var productCode = $("#productCodePost").val();
        var contractDate = $("#contractDateId").val();
        var isAllowedToActivateAddToCartButton = productCode !== "" && isValidContractNumberLength() && contractDate !== "";
        activateAddToCartButton(isAllowedToActivateAddToCartButton);
    });
}

function addContractDateInputHandler() {
    $("#contractDateId").on("change", function () {
        var productCode = $("#productCodePost").val();

        var isAllowedToActivateAddToCartButton = productCode !== "" && this.value !== "" && isValidContractNumberLength();
        activateAddToCartButton(isAllowedToActivateAddToCartButton);
    });
}

function isValidContractNumberLength() {
    var contractNumberLength = $("#contractNumberId").val().length;
    return contractNumberLength > 0 && contractNumberLength <= 10;
}

function activateAddToCartButton(isAllowedToActivateAddToCartButton) {
    var addToCartButton = $("#asmAddToCart");

    if (isAllowedToActivateAddToCartButton) {
        toggleActivationState(addToCartButton, true);
    } else {
        toggleActivationState(addToCartButton, false);
    }
}

function addVbOrderIdSelect(productCode) {
    $.ajax({
        url: ACC.common.contextPath + "/assisted-service/vbOrderIds",
        dataType: "jsonp",
        data: {
            productCode: productCode
        },
        success: function (data) {
            var orderType = $("input:radio[name='orderType']:checked").val();
            var vbOrderId = $("#vbOrderId");
            data.forEach(function (item) {
                vbOrderId.append("<option>" + item + "</option>");
            });
            if (data.length > 0 && orderType.attr('id') === 'asmUpsellOrder' && orderType === 'UPSELL') {
                vbOrderId.val(data[0]);
                toggleActivationState($("#asmAddToCart"), true);
            } else {
                vbOrderId.val('');
                toggleActivationState($("#asmAddToCart"), false);
            }
        }
    });
}