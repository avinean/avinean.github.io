window.SAP_STORE = window.SAP_STORE || {};
window.SAP_STORE.analytics = window.SAP_STORE.analytics || {};

SAP_STORE.analytics.CONSTANTS = {
    ONE_STEP_THANK_YOU_PAGE_NAME: 'sapstore:/checkout/ordersubmitted',
    CREATE_SUPPORT_REQUEST_BUTTON: 'Create Support Request Button',
    SC_ADD_EVENT_COOKIE_NAME: 'sc_add_event',
    PAGE_URL_CHANGE_COUNTRY_COOKIE: 'page_url_change_country',
    E_VAR_45_DEFAULT: '1',
    E_VAR_22_REQUEST_SUPPORT: 'sapstore:request support',
    COOKIE_TIME_EXPIRATION: 365,
    SITE_SECTION: {
        DIGITAL_SERVICE_CHECKOUT: 'dsc',
        ONE_STEP_CHECKOUT: 'osc',
        LANDING_PAGE: 'Landing Page'
    },
    MODULE_NAME: {
        YOUR_SELECTION: 'yr_slctn',
        THANK_YOU: 'thnk_u',
        MODIFY_SUBSCRIPTION: 'mdfy_sub',
        SAP_HERO_IMAGE_COMPONENT: 'hero image component',
        FEATURE_GRID_COMPONENT: 'feature grid component',
        SAP_YOUTUBE_COMPONENT: 'youtube video component',
        SAP_SLIDER_COMPONENT: 'Slider component',
        SAP_CTA_COMPONENT: 'CTA component',
        SAP_ACCORDION_LIST_COMPONENT: 'accordion list component'
    },
    PRODUCT_TYPE: {
        FREE_TRIAL: 'free trial',
        PAID: 'paid'
    },
    SALE_TYPE: {
        SELF_SERVICE: 'self-service',
        ASM: 'ASM'
    },
    EVAR17: {
        RECOMMENDATION_THANK_YOU: 'Recommendation-Thank You Page',
        IN_APP: 'In-app'
    }
};

/**
 * Created by C5252511 on 1/16/2017.
 */
var omniture = (function (window, $, SAP_STORE) {
    var CONSTANTS = SAP_STORE.analytics.CONSTANTS || {};
    var s = window.s || {};
    
    window.s_trackEngagement = window.s_trackEngagement || function () {};
    s.cookieWrite = s.cookieWrite || function () {};
    s.cookieRead = s.cookieRead || function () {};
    s.getQueryParam = s.getQueryParam || function () {};
    s.track = s.track || function () {};
    
    /** Private module methods **/

    var products = {
        general: {
            getListAddToCart: function(options){
                var products = ";" + options.productId + ";;;event14=" + options.productRevenue;
                if (options.extraProducts !== null && options.extraProducts.length > 0) {
                    for (var i = 0; i < options.extraProducts.length; i++) {
                        products += ",;" + options.extraProducts[i].productId + ";;;event14=" + options.extraProducts[i].productRevenue;
                    }
                }
                return products;
            },
            getListUpdateCart: function(options){
                var quantity = options.quantity < 0 ? options.quantity.replace("-", "") : options.quantity;
                var products = ";" + options.productId + ";" + quantity + ";;;event14=" + options.productRevenue;
                if (options.productList !== '' && options.productList !== undefined) {
                    products += options.productList;
                }
                return products;
            },
            getListSummaryEvent14: function(options){
                return ";" + options.productId + ";;;event14=" + options.productRevenue;
            }
        },
        checkoutV2: {
            getListAddToCart: function(options){
                var products = ';' + options.productId + ';;;';
                if (options.shouldAddEventSend) {
                    products += 'event14=' + options.productRevenue;
                }
                if (options.cameFrom) {
                    products += ';eVar17=' + options.cameFrom;
                }
                if (options.extraProductsAsString !== undefined) {
                    products += options.extraProductsAsString;
                }
                return products;
            },
            getListConfirmation: function(options){
                var orderEntries = options.orderEntries || {};
                var products = [];
                $.each(orderEntries, function(index, entry){
                    var chunks = [];
                    var firstEntry = index === 0;
                    if (entry.productCode){
                        var productItem = entry.productCode;
                        if (entry.duration) {
                            productItem += '|' + entry.duration;
                        }
                        chunks.push(productItem);
                        if (entry.quantity) {
                            chunks.push(entry.quantity);
                        }
                        if (entry.totalPrice){
                            chunks.push(entry.totalPrice);
                        }
                        if (options.crossSellAutoPurchase && firstEntry){
                            var extraItem = ";eVar17=" + CONSTANTS.EVAR17.RECOMMENDATION_THANK_YOU;
                            chunks.push(extraItem);
                        }
                    }
                    products.push(';' + chunks.join(';'));
                });
                return products.join(',');
            }
        },
        oneStepCheckout: {
            getListAddToCart: function(options){
                var quantity = options.quantity ? options.quantity : 1;
                var products = ";" + options.productId + ";" + quantity + ";;";
                if (options.shouldAddEventSend) {
                    products += "event14=" + options.productRevenue;
                }
                if (options.extraProductsAsString !== undefined) {
                    products += options.extraProductsAsString;
                }
                return products;
            }
        }
    };

    var funnel = {
        getString: function(options){
            options = options || {};
            var funnelString = '';
            if (options.pageId && (options.productRevenue || options.crossSellAutoPurchase)) {
                funnelString = this.getFunnelVersion(options.pageId)
                    + '|' + this.getProductType(options)
                    + '|' + this.getSaleType(options);
            }
            return funnelString;
        },
        getFunnelVersion: function(pageId){
            var versions = {
                checkoutV2: CONSTANTS.SITE_SECTION.DIGITAL_SERVICE_CHECKOUT,
                oneStepCheckout: CONSTANTS.SITE_SECTION.ONE_STEP_CHECKOUT,
                thank_you_page_cv2: CONSTANTS.SITE_SECTION.DIGITAL_SERVICE_CHECKOUT
            };
            return versions[pageId] ? versions[pageId] : '';
        },
        getProductType: function(options){
            options = options || {};
            if (options.crossSellAutoPurchase) return CONSTANTS.PRODUCT_TYPE.FREE_TRIAL;
            if (!options.productRevenue) return '';
            var productRevenue = Number(options.productRevenue);
            return productRevenue === 0 ? CONSTANTS.PRODUCT_TYPE.FREE_TRIAL : CONSTANTS.PRODUCT_TYPE.PAID;
        },
        getSaleType: function(options){
            options = options || {};
            var saleType = CONSTANTS.SALE_TYPE.SELF_SERVICE;
            if (options.assistedByAgent){
                saleType = CONSTANTS.SALE_TYPE.ASM;
            }
            return saleType;
        }
    };

    function getSourceOfCheckout(){
        var cameFrom = null;
        var cameFromThankYouPage = s.getQueryParam('from') === 'thankYouPage';
        var cameFromInApp = s.getQueryParam('inApp') === 'true';

        if (cameFromInApp) {
            cameFrom = CONSTANTS.EVAR17['IN_APP'];
        }

        if (cameFromThankYouPage) {
            cameFrom = CONSTANTS.EVAR17['RECOMMENDATION_THANK_YOU'];
        }

        return cameFrom;
    }
    /**
     *
     * @param event
     * @returns {boolean}
     */
    function trackingIsManualClick(event) {
        var isManualClick = false;
        if (event.which && event.clientX !== undefined && event.clientY !== undefined && (event.clientX !== 0 || event.clientY !== 0)) {
            // Probably a real click.
            isManualClick = true;
        }
        return isManualClick;
    }

    /**
     *
     * @param parentElement
     * @param element
     * @returns {boolean}
     */
    function trackingIsClickable(parentElement, element) {
        var isClickable = false;

        // correspond to trackingLinkType(element) use cases
        if (isClickAllowed(element)) {
            isClickable = true;
        } else if (element !== parentElement) {
            // check if element has parent A link or element with onclick attribute
            var el = element.parentNode;
            while (el !== parentElement) {
                var isClickNotSkipped = !el.getAttribute('data-skip-tracking');
                if (isClickNotSkipped && (el.nodeName === "A" || el.getAttribute('onclick'))) {
                    isClickable = true;
                    break;
                } else {
                    el = el.parentNode;
                }
            }
        }
        return isClickable;
    }

    /**
     * @param {HTMLElement} element
     */
    function isClickAllowed(element) {
        var isClickNotSkipped = !element.getAttribute('data-skip-tracking');
        var isClickable = isClickableElement(element);

        return isClickNotSkipped && isClickable;
    }

    /**
     * Check clickability of element for analytics tracking
     * @param element
     * @returns {boolean|*}
     */

    function isClickableElement(element) {
        var nodeName = element.nodeName;
        var isClickOnAccordionTitle = element.hasAttribute('data-is-accordion-item-title');
        var isClickOnAllowedNodeType = ['A','BUTTON','IMG','VIDEO'].indexOf(nodeName) !== -1;
        var isClickOnRadioButton = nodeName === "INPUT" && element.type === "radio";
        var isClickOnDivButton = element.nodeName === "DIV" && (' ' + element.className + ' ').indexOf(' button ') > -1;

        return isClickOnAllowedNodeType || isClickOnRadioButton || isClickOnAccordionTitle || isClickOnDivButton;
    }

    /**
     * @param {HTMLElement} element
     */
    function trackingElementText(element) {
        var elText = element.textContent;
        if (elText === "") {
            elText = element.getAttribute("alt");
        }
        if (elText === "" || elText === null) {
            elText = element.getAttribute("src");
        }
        if (elText === "" || elText === null) {
            elText = element.getAttribute("title");
        }
        // get text of radio input element
        if (elText === "" || elText === null && (element.nodeName === "INPUT" && element.type === "radio")) {
            var el = element.nextSibling;
            if (el.nodeName !== "LABEL") el = el.nextSibling;
            if (el && el.nodeName === "LABEL") {
                elText = el.textContent;
            }
            if (elText === "" || elText === null) {
                elText = element.getAttribute('data-name');
            }

            if (!elText && $(element).closest('label').length) {
                elText = $(element).closest('label').text();
            }
        }
        if ($.trim(elText) === "" || elText === null) {
            elText = element.getAttribute("data-name");
        }
        if (elText === null) {
            elText = "";
        }

        return $.trim(elText);
    }

    /**
     *
     * @param elementOrUrl
     * @returns {*}
     */
    function trackingProductId(elementOrUrl) {
        var productIds = "NONE";
        var pagePathname = window.location.pathname;
        var pdpRegex = "^/solutions/([^/]+)/.*";
        var pagePathnameMatch = pagePathname.match(pdpRegex);

        if (elementOrUrl.getAttribute('data-product-code')) {
            return elementOrUrl.getAttribute('data-product-code');
        }

        if (pagePathnameMatch) {
            productIds = pagePathnameMatch[1];
            return productIds;
        }
        if (elementOrUrl.nodeName === "A") {
            var elementPathname = elementOrUrl.pathname;
            var elementPathnameMatch = elementPathname.match(pdpRegex);
            if (elementPathnameMatch) {
                productIds = elementPathnameMatch[1];
                return productIds;
            }
        }

        var productHiddenFields = document.getElementsByName('productCode');
        if (productHiddenFields && productHiddenFields.length > 0) {
            var products = [];
            for (var i = 0; i < productHiddenFields.length; ++i) {
                var item = productHiddenFields[i];
                products.push(item.value);
            }
            productIds = products.join(',');
        }
        return productIds;
    }

    /**
     *
     * @param element
     * @returns {string}
     */
    function trackingLinkType(element) {
        var linkType = 'a';
        if (element.nodeName === "A") {
            linkType = 't';
            // in current implementation video link is an A html element.
            var videoUrlRegex = "youtube.com";
            var videoUrlMatch = element.href.match(videoUrlRegex);
            if (videoUrlMatch || element.hasAttribute('data-is-video-link')) {
                linkType = 'v';
            } else {
                // button can be represented as an A wrapped in DIV.
                var parentElement = element.parentNode;
                var elementHasButtonClass = (' ' + element.className + ' ').indexOf(' button ') > -1;
                var parentHasButtonClass = (' ' + parentElement.className + ' ').indexOf(' button ') > -1;
                if (elementHasButtonClass || (parentElement.nodeName === "DIV" && parentHasButtonClass)) {
                    linkType = 'b';
                }
            }
        } else if (element.nodeName === "BUTTON") {
            linkType = 'b';
        } else if (element.nodeName === "DIV" && (' ' + element.className + ' ').indexOf(' button ') > -1) {
            linkType = 'b';
        } else if (element.nodeName === "IMG") {
            linkType = 'i';
        } else if (element.nodeName === "INPUT" && element.type === "radio") {
            linkType = 'r';
        } else if (element.nodeName === "VIDEO") {
            linkType = 'v';
        } else if (element.hasAttribute('data-is-accordion-item-title')) {
            linkType = 't';
        }
        return linkType;
    }

    /**
     *
     * @param parentElement
     * @param element
     * @param linkType
     * @returns {number}
     */
    function trackingPosition(parentElement, element, linkType) {
        var linkPosition = getLinkPositionForSpecialCases(element);
        if (linkPosition){
            return linkPosition;
        }

        var position = 1;
        if (parentElement !== element) {
            var nodeName = element.nodeName.toLowerCase();
            var xpathExpression = ".//" + nodeName;
            var jquerySelectors = [];
            if (linkType === 'v') {
                xpathExpression = ".//video|.//a[contains(@href,'youtube.com')]";
                jquerySelectors = ["video, a[href*='youtube.com']"];
            } else if (linkType === 'b') {
                xpathExpression = ".//button|.//div[contains(concat(' ', @class,' '),' button ')]/a|.//a[contains(concat(' ', @class,' '),' button ')]";
                jquerySelectors = ["button, a[class~='button'], div[class~='button'] > a"];
            } else if (linkType === 'r') {
                xpathExpression = ".//input[@type='radio']";
                jquerySelectors = ["input:radio"];
            } else if (linkType === 't') {
                xpathExpression = ".//a[not(contains(concat(' ', @class,' '),' button ')) and not(contains(@href,'youtube.com')) and not(ancestor::div[contains(concat(' ', @class,' '),' button ')]) and not(*)]";
                jquerySelectors = ["a:not([href*='youtube.com'])", "a:not([class~='button'])", $("a").not($("a").parent("div[class~='button']").children()), "a:not(:has(*))"];
            } else if (linkType === 'a') {
                var areaPath = [];
                var el = element;
                var clickableElementFound = false;
                while (el !== parentElement) {
                    if (el.nodeName === "A" || el.getAttribute('onclick')) {
                        clickableElementFound = true;
                        element = el;
                    }
                    if (clickableElementFound) {
                        areaPath.push(el.nodeName);
                    }
                    el = el.parentNode;
                }
                areaPath.reverse();
                xpathExpression = ".//" + areaPath.join("/") + "[*]";
                jquerySelectors.push(areaPath.join(" > ") + ":has(*)");
            }

            var useJQuery = false;
            // IE don't support XPath. Using JQuery selectors instead.
            if (!document.evaluate) {
                useJQuery = true;
            }
            if (useJQuery) {
                position = trackingFindPositionJQuery(jquerySelectors, parentElement, element);
            } else {
                position = trackingFindPositionXPath(xpathExpression, parentElement, element);
            }
        }
        return position;
    }

    /**
     *
     * @param jquerySelectors
     * @param parentElement
     * @param element
     * @returns {number}
     */
    function trackingFindPositionJQuery(jquerySelectors, parentElement, element) {
        var position = 1;
        var jquerySelector = $(jquerySelectors[0]);
        for (var i = 1; i < jquerySelectors.length; i++) {
            jquerySelector = jquerySelector.filter(jquerySelectors[i]);
        }

        $(parentElement).find(jquerySelector).each(function () {
            if (this === element) {
                return false;
            }
            // if the element or its parent is hidden we don't increase the position.
            if (!isElementOrParentHidden(this)) {
                position++;
            }
        });
        return position;
    }

    /**
     *
     * @param xpathExpression
     * @param parentElement
     * @param element
     * @returns {number}
     */
    function trackingFindPositionXPath(xpathExpression, parentElement, element) {
        var position = 1;
        var iterator = document.evaluate(xpathExpression, parentElement, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);
        var nextNode = iterator.iterateNext();

        while (nextNode) {
            if (nextNode === element) {
                break;
            }
            // if the element or its parent is hidden we don't increase the position.
            if (!isElementOrParentHidden(nextNode)) {
                position++;
            }
            nextNode = iterator.iterateNext();
        }
        return position;
    }

    /**
     *
     * @param element
     * @returns {boolean}
     */
    function isElementOrParentHidden(element) {
        return (!$(element).is(':visible'));
    }

    /**
     *
     * @param eventString
     * @returns {boolean}
     */
    function shouldTrackAddToCartEvent(eventString) {
        var scAddEvents = $.cookie(SAP_STORE.analytics.CONSTANTS.SC_ADD_EVENT_COOKIE_NAME) || '';
        var shouldSend = true;

        if ((scAddEvents && !eventString) || scAddEvents === eventString) {
            shouldSend = false;
        }
        return shouldSend;
    }

    /**
     * Check order entries for duration value
     * @param orderEntries
     */
    function hasDurationInProductList(orderEntries){
        var hasDuration = false;
        $.each(orderEntries, function(key, entry){
            if (entry.duration){
                hasDuration = true;
            }
        });
        return hasDuration;
    }

    function saveCurrentPageUrl() {
        if (!window.mediator) return;
        window.mediator.subscribe('global:changeCountryReloadPage', function() {
            var date = new Date();
            date.setMonth(date.getMonth() + 12);

            if (s) {
                s.cookieWrite(CONSTANTS.PAGE_URL_CHANGE_COUNTRY_COOKIE, window.location.href, date);
            }
        });
    }

    /**
     * Get link position for special cases on simple landing page
     * @returns {*}
     */
    function getLinkPositionForSpecialCases(element) {

        /* Handling link positions in feature grid */
        var $featureGridItemParent = $(element).parents('.js-feature-grid-item');
        if ($featureGridItemParent.length > 0){
            return $featureGridItemParent.data('itemPosition');
        }

        /* Handling link positions in slider */
        var $currentSlide = $(element).parents('.js-slider').find('.slick-current');
        if ($currentSlide.length > 0){
            return $currentSlide.data('slickIndex') + 1;
        }

        /* Handling item positions in accordion list */
        var $currentAccordionItem = $(element).parents('.js-accordion');
        if ($currentAccordionItem.length > 0) {
            var $element = $(element).data('itemPosition') ? $(element) : $(element).parents('.accordion-item-title');
            return $element.data('itemPosition');
        }

        return null;
    }
    saveCurrentPageUrl();

    /** Public module methods **/

    var publicMethods = {
        /**
         *
         * @param userLoggedIn
         * @param userRoleVar
         */
        trackingOmniture: function (userLoggedIn, userRoleVar) {
            if (s) {
                s.currencyCode = SAP_STORE.currentCurrencyISOCode;
                s.prop2 = SAP_STORE.currentLanguageISOCode;
                s.prop6 = userRoleVar;
                s.prop9 = userLoggedIn;
                s.eVar59 = ':::::';
                s.prop10 = 'XXXXX';

                if (SAP_STORE.currentCountryISOCode === 'GB') {
                    s.prop5 = 'UK';
                } else if (SAP_STORE.currentCountryISOCode === 'KR') {
                    s.prop5 = 'SK';
                } else {
                    s.prop5 = SAP_STORE.currentCountryISOCode;
                }
            }
        },
        /**
         *
         * @param description
         * @param elementOrUrl
         */
        trackingEngagement: function (description, elementOrUrl) {
            var url = elementOrUrl;
            if (elementOrUrl.href) {
                url = elementOrUrl.href;
            }
            s_trackEngagement(description, CONSTANTS.E_VAR_45_DEFAULT, url);
        },
        /**
         *
         * @param options
         */
        trackProductNAPopup: function (options) {
            var url;
            var description;

            options = options || {};

            if (!s) {
                return;
            }

            if (options.siteSection === 'hmpg') {
                url = s.cookieRead(CONSTANTS.PAGE_URL_CHANGE_COUNTRY_COOKIE);
            } else {
                url = window.location.href;
            }

            s.cookieWrite(CONSTANTS.PAGE_URL_CHANGE_COUNTRY_COOKIE, '');

            description = 'TRACK | ' + options.siteSection + ' | unspprtd_msg | ' + options.productCode + ' | ' + options.isoCode + ' | ' + url;

            s_trackEngagement(description, CONSTANTS.E_VAR_45_DEFAULT, window.location.href);
        },
        /**
         *
         * @param productList
         */
        trackingOmnitureCart: function (productList) {
            if (s !== undefined) {
                s.events = "scView";
                s.products = productList;
            }
        },
        /**
         *
         * @param productList
         * @param cartId
         * @param funnel
         */
        addInformationCheckout: function (productList, cartId, funnel) {
            if (s && productList && productList != null && productList !== '') {
                s.events = "scCheckout:" + cartId;
                s.products = productList;
                s.eVar41 = funnel;
            }
        },
        /**
         *
         * @param firstItem
         * @param cartId
         * @param productId
         * @param productRevenue
         * @param funnel
         */
        trackingOmnitureSummaryEvent14: function (firstItem, cartId, productId, productRevenue, funnel) {
            if (s !== undefined) {
                window.events = "";
                if (firstItem === 'true' || firstItem === true) {
                    window.events = "scAdd,event14,scOpen:" + cartId;
                } else {
                    window.events = "scAdd,event14";
                    window.events = "scAdd,event14";
                }

                var trackingObject = {
                    'events': window.events,
                    'products': products.general.getListSummaryEvent14({
                        productId: productId,
                        productRevenue: productRevenue
                    }),
                    'eVar41': funnel
                };
                s.track(trackingObject, 'tl_o');
            }
        },
        /**
         *
         * @param options
         */
        trackingOmnitureSummaryEvent19: function (options) {
            var adobeInformation = options || {};
            var cartId = adobeInformation.cartId;
            var productList = adobeInformation.productList;
            var c4cTrialOrder = adobeInformation.c4cTrialOrder;
            var funnelString = adobeInformation.funnel ? adobeInformation.funnel : funnel.getString(adobeInformation);

            if (s !== undefined) {
                s.events = s.events || "";
                var shouldTrackCheckoutEvent = s.events.indexOf("scCheckout") === -1 && (c4cTrialOrder === "false" || c4cTrialOrder === false);
                if (s.events !== "") {
                    s.events += ",";
                }
                s.events += "event19:" + cartId;
                if (shouldTrackCheckoutEvent) {
                    s.events += ",scCheckout:" + cartId;
                }
                if (!s.products) {
                    s.products = productList;
                }
                s.eVar41 = funnelString;
            }
        },
        /**
         *
         * @param options
         */
        trackingOmnitureEvent19ClickOnTrack: function (options) {
            var adobeInformation = options || {};
            var cartId = options.cartId;
            var productList = options.productList;
            var c4cTrialOrder = options.c4cTrialOrder;

            if (s !== undefined) {
                if ((c4cTrialOrder === "false" || c4cTrialOrder === false)) {
                    window.events = "event19:" + cartId;
                } else {
                    window.events = "event19:" + cartId + ",scCheckout:" + cartId;
                }
                var trackingObject = {
                    'events': window.events,
                    'products': productList,
                    'eVar41': funnel.getString(adobeInformation)
                };
                s.track(trackingObject, 'tl_o');
            }
        },
        /**
         * Adding the event for adding a product to adobe
         * @param information
         */
        addAdobeOmnitureAddToCart: function (information) {
            if (s !== undefined && information !== undefined) {
                window.events = '';
                information.cartId = information.cartId ? ':' + information.cartId : '';
                
                if (information.firstItem) {
                    window.events = "scAdd,event14,scOpen" + information.cartId;
                } else {
                    window.events = "scAdd,event14";
                }

                var trackingObject = {
                    'events': window.events,
                    'products': products.general.getListAddToCart(information),
                    'eVar41': information.funnel
                };

                s.track(trackingObject, 'tl_o');
            }
        },
        /**
         * Adding the event for adding a product to adobe in checkout
         * @param information
         */
        adobeAnalyticsAddToCart: function (information) {
            if (s !== undefined && information !== undefined) {
                var eventString = information.productId ? (information.productId + ':' + information.cartId) : '';
                var shouldAddEventSend = shouldTrackAddToCartEvent(eventString);
                var productsOptions = $.extend({}, information, {
                    shouldAddEventSend: shouldAddEventSend,
                    cameFrom: getSourceOfCheckout()
                });

                window.events = '';

                if (shouldAddEventSend) {
                    window.events += 'scAdd,event14,';
                    $.cookie(CONSTANTS.SC_ADD_EVENT_COOKIE_NAME, eventString, {
                        path: '/',
                        expires: CONSTANTS.COOKIE_TIME_EXPIRATION,
                        secure: true
                    });
                }

                window.events += 'scOpen:' + information.cartId + ',scCheckout:' + information.cartId;

                s.events = window.events;
                if (information.pageId){
                    s.products = products[information.pageId].getListAddToCart(productsOptions);
                }
                s.currencyCode = SAP_STORE.currentCurrencyISOCode;
                s.eVar41 = funnel.getString(information);
            }
        },
        /**
         * Tracking omniture on Search page
         * @param searchText
         */
        trackingOmnitureSearchGrid: function(searchText){
            if(s){
                s.prop11 = searchText;
            }
        },
        /**
         * Tracking omniture for empty search results
         * @param searchText
         * @param searchTextNoResults
         */
        trackingOmnitureSearchEmpty: function(searchText, searchTextNoResults){
            if(s){
                s.prop11 = searchText;
                s.prop12 = searchTextNoResults;
            }
        },
        /**
         * Tracking omniture on PDP
         * @param productCode
         * @param refererPDP
         */
        trackingOmniturePDP: function(productCode, refererPDP){
            if(s){
                s.events="prodView";
                s.products=';' + productCode +';;;;eVar17=' + refererPDP;
            }
        },
        /**
         *
         * @param productList
         * @param orderTimestamp
         * @param paymentType
         * @param funnel
         */
        trackingOmnitureConfirmation: function (productList, orderTimestamp, paymentType, funnel) {
            if (s) {
                s.events = "purchase";
                s.products = productList;
                s.purchaseID = orderTimestamp;
                s.eVar60 = paymentType;
                s.eVar41 = funnel;
            }
        },
        /**
         *
         * @param productList
         * @param orderTimestamp
         * @param paymentType
         */
        trackingOmnitureConfirmationOneStep: function (productList, orderTimestamp, paymentType) {
            if (s) {
                var trackingObject = {
                    pageName: CONSTANTS.ONE_STEP_THANK_YOU_PAGE_NAME,
                    events: 'purchase',
                    products: productList,
                    purchaseID: orderTimestamp,
                    eVar60: paymentType
                };

                s.track(trackingObject);
            }
        },
        /**
         *
         * @param options
         */
        trackingOmnitureConfirmationCheckoutV2: function (options) {
            if (s) {
                s.events = '';

                if (options.crossSellAutoPurchase) {
                    s.events += 'scAdd,event14,scOpen:' + options.orderTimestamp + ',scCheckout:' + options.orderTimestamp + ',event19:' + options.orderTimestamp + ',';
                    s.eVar41 = funnel.getString(options);
                }

                s.events += 'purchase';
                s.products = products.checkoutV2.getListConfirmation(options);
                s.purchaseID = options.orderTimestamp + ':' + options.orderId;
                s.eVar60 = options.paymentType;

                if (hasDurationInProductList(options.orderEntries)) {
                    s.events += ',event52';
                }
            }
        },
        /**
         * Adding the event for adding a product to adobe-
         * @param updateInformation
         */
        trackingOmnitureUpdateCart: function (updateInformation) {
            updateInformation = updateInformation || {};
            if (updateInformation.productRevenue !== '' && updateInformation.productRevenue !== undefined && updateInformation.productRevenue !== '0.0') {
                    var events = "scAdd,event14";
                    var quantity = updateInformation.quantity;
                    if (quantity < 0) {
                        events = "scRemove,event14";
                    }
                    var trackingObject = {
                        'events': events,
                        'products': products.general.getListUpdateCart(updateInformation)
                    };
                    s.track(trackingObject, 'tl_o');
            }
        },
        /**
         * Service request tracking
         */
        trackingServRequest: function() {
            if (window.s) {
                s.events = 'event1';
                s.eVar22 = CONSTANTS.E_VAR_22_REQUEST_SUPPORT;
            }
        },
        trackingOmnitureEvent2: function () {
            if (window.s) {
                var trackingObject = {
                    'events': 'event2'
                };
                s.track(trackingObject,'tl_o');
            }
        },
        /**
         *
         * @param event
         * @param siteSection
         * @param moduleName
         * @param parentElement
         */
        trackingEngagementGeneric: function (event, siteSection, moduleName, parentElement) {
            try {
                var elementOrUrl = event.target;
                // Check if element is clickable. Don't fire s_trackEngagement event for non-clickable elements.
                var isClickable = trackingIsClickable(parentElement, elementOrUrl);
                // Check if any parent element in tree except parentElement has trackingEngagementGeneric call in onclick attribute.
                // This is done to prevent calling trackingEngagementGeneric twice.
                var hasInnerSection = $(elementOrUrl).parentsUntil(parentElement, "*[onclick*='trackingEngagementGeneric']").length > 0;
                // Check if click event is real click and not generated by javascript
                var isManualClick = trackingIsManualClick(event);
                if (isClickable && !hasInnerSection && isManualClick) {
                    var url = window.location.href;
                    if (elementOrUrl.href) {
                        url = elementOrUrl.href;
                    }
                    var productId = trackingProductId(elementOrUrl);
                    var elementText = trackingElementText(elementOrUrl);
                    var linkType = trackingLinkType(elementOrUrl);
                    var position = trackingPosition(parentElement, elementOrUrl, linkType);
                    var linkTypeAndPosition = linkType + '_' + position;

                    var description = 'TRACK | ' + siteSection + ' | ' + moduleName + ' | ' + productId + ' | ' + linkTypeAndPosition + ' | ' + elementText;
                    s_trackEngagement(description, CONSTANTS.E_VAR_45_DEFAULT, url);
                }
            } catch (e) {
                //noop
                //do not break UI JS in case of tracking errors
            }
        }
    };
    return publicMethods;
})(window, jQuery, SAP_STORE);
/* The next line needs for backward compatibility using omniture methods in global namespace
 * When the migration to using omniture module will be finished this line should be removed
 */
$.extend(window, omniture);

/**
 * Custom MouseEvent for Internet Explorer
 */
(function (window) {
    try {
        new MouseEvent('click');
        return false;
    } catch (e) {
        // pass
    }

    var CustomMouseEvent = function(event, params) {
        params = params || { bubbles: false, cancelable: false };
        var mouseEvent = document.createEvent('MouseEvent');
        mouseEvent.initMouseEvent(
            event,
            params.bubbles,
            params.cancelable,
            window,
            0,
            params.screenX || 0,
            params.screenY || 0,
            params.clientX || 0,
            params.clientY || 0,
            params.ctrlKey || false,
            params.altKey || false,
            params.shiftKey || false,
            params.metaKey || false,
            params.button || 0,
            params.relatedTarget || null
        );

        return mouseEvent;
    }

    CustomMouseEvent.prototype = Event.prototype;

    window.MouseEvent = CustomMouseEvent;
})(window);

;(function($, omniture, analytics){
    var analyticsData = analytics.data || {};
    var module = {
        CONSTANTS: analytics.CONSTANTS,
        adobeInformation: analyticsData.informationCheckoutV2
            ? analyticsData.informationCheckoutV2
            : analyticsData.informationOneStepCheckout,
        init: function(){
            this.trackAddToCart(this.adobeInformation);
            this.trackSummaryEvent19(this.adobeInformation);
        },
        trackAddToCart: function(analyticsOptions){
            analyticsOptions = analyticsOptions || {};
            omniture.adobeAnalyticsAddToCart(analyticsOptions);
            this.trackGTMAddToCart(analyticsOptions);
        },
        trackSummaryEvent19: function(analyticsOptions){
            analyticsOptions = analyticsOptions || {};
            if (analyticsOptions.isCurrentStepConfirmation){
                omniture.trackingOmnitureSummaryEvent19(analyticsOptions);
            }
        },
        trackGTMAddToCart: function(analyticsOptions){
            if (window.gtmEnabled) {
                trackAddToCart_GTM(
                    analyticsOptions.productId,
                    analyticsOptions.quantity,
                    analyticsOptions.productId,
                    analyticsOptions.productRevenue
                );
            }
        }
    };

    if (analyticsData.informationCheckoutV2 || analyticsData.informationOneStepCheckout){
        module.init();
    }

})(jQuery, omniture, SAP_STORE.analytics);
/**
 * Created by C5252511 on 1/16/2017.
 */
;(function($, omniture, analytics){
    var analyticsData = analytics.data || {};
    var module = {
        CONSTANTS: analytics.CONSTANTS,
        informationPurchase: analyticsData.informationPurchase ? analyticsData.informationPurchase : {},
        ui: {
            nextStepsDetails: $('#nextStepsDetails')
        },
        init: function(){
            this.trackConfirmation(this.informationPurchase);
            this.addEngagementHandlers();
        },
        trackConfirmation: function(analyticsOptions){
            omniture.trackingOmnitureConfirmationCheckoutV2(analyticsOptions);
        },
        addEngagementHandlers: function(){
            this.ui.nextStepsDetails.on('click', function(event){
                omniture.trackingEngagementGeneric(
                    event,
                    this.CONSTANTS.SITE_SECTION.DIGITAL_SERVICE_CHECKOUT,
                    this.CONSTANTS.MODULE_NAME.THANK_YOU,
                    this.ui.nextStepsDetails[0]
                );
            }.bind(this));
        }
    };

    if (analyticsData.informationPurchase){
        module.init();
    }

})(jQuery, omniture, SAP_STORE.analytics);

